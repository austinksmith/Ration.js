{"version":3,"sources":["webpack:///ration.web.min.js","webpack:///webpack/bootstrap eb67d7b9f95502eceac8","webpack:///./ration.js"],"names":["ration","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","visits","maxPerSecond","delayInMS","removeRecordAfter","rationjs","req","res","next","requestRecordFound","requestRecord","requestBy","header","connection","remoteAddress","newRequestAt","Date","now","lastRequestAt","delayMultiplier","requestCount","length","push","i","requestInterval","lastRequest","timeSinceLastVisit","splice","setTimeout"],"mappings":"AAAA,GAAIA,QACK,SAAUC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDOM,SAAUI,EAAQD,EAASH,GAEhCI,EAAOD,QAAUH,EAAoB,IAKhC,SAAUI,EAAQD,GAEvB,YE1CD,IAAIQ,MACAC,EAAe,GACfC,EAAa,IAAOD,EACpBE,EAAqB,IAEnBC,EAAW,SAACC,EAAKC,EAAKC,GAI3B,GAAIC,IAAqB,EACpBC,GACHC,UAAYL,EAAIM,OAAO,oBAAsBN,EAAIO,WAAWC,cAC5DC,aAAcC,KAAKC,MACnBC,cAAeF,KAAKC,MACpBE,gBAAiB,EACjBC,aAAc,EAGf,IAAqB,IAAlBnB,EAAOoB,OACTpB,EAAOqB,KAAKZ,OAEZ,KAAK,GAAIa,GAAItB,EAAOoB,OAAS,EAAGE,GAAK,EAAGA,IAEvC,GAAGtB,EAAOsB,GAAGZ,YAAcD,EAAcC,UAAW,CACnDF,GAAqB,EAErBR,EAAOsB,GAAGH,cAAgB,CAE1B,IAAIF,GAAgBjB,EAAOsB,GAAGL,cAC1BH,EAAeL,EAAcK,aAC7BS,EAAmBT,EAAeG,CAEnCM,IAAmB,IAElBvB,EAAOsB,GAAGH,cAAgBlB,IAC5BD,EAAOsB,GAAGJ,iBAAmB,EAC7BT,EAAcS,gBAAkBlB,EAAOsB,GAAGJ,kBAI3ClB,EAAOsB,GAAGJ,gBAAkB,EAC5BlB,EAAOsB,GAAGH,aAAe,GAG1BnB,EAAOsB,GAAGE,YAAcf,EAAcK,iBAChC,CAEN,GAAIW,GAAsBhB,EAAcK,aAAed,EAAOsB,GAAGL,aAC9DQ,IAAsBtB,GACxBH,EAAO0B,OAAOJ,EAAG,GAGT,IAANA,GAAYd,GACdR,EAAOqB,KAAKZ,GAMhBkB,WAAW,WACVpB,KACGL,EAAYO,EAAcS,iBAGV,oBAAXzB,IAAoD,mBAAnBA,GAAOD,UACjDC,EAAOD,QAAUY","file":"ration.web.min.js","sourcesContent":["var ration =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\t\n\t/***********************************************************************************\n\t* Title: Ration.js                                                                 *\n\t* Description: 100% Vanilla Javascript Rate Limiting / DDOS Protection Library     *\n\t* Author: Austin K. Smith                                                          *\n\t* Contact: austin@asmithdev.com                                                    *  \n\t* Copyright: 2021 Austin K. Smith - austin@asmithdev.com                           * \n\t* License: Artistic License 2.0                                                    *\n\t***********************************************************************************/\n\t\n\tvar visits = [];\n\tvar maxPerSecond = 20;\n\tvar delayInMS = 1000 / maxPerSecond;\n\tvar removeRecordAfter = 1000 * 60 * 5; //If no visits after 5 minutes, remove the record\n\t\n\tvar rationjs = function rationjs(req, res, next) {\n\t  'use strict';\n\t\n\t  var requestRecordFound = false;\n\t  var requestRecord = {\n\t    requestBy: req.header('x-forwarded-for') || req.connection.remoteAddress,\n\t    newRequestAt: Date.now(),\n\t    lastRequestAt: Date.now(),\n\t    delayMultiplier: 1,\n\t    requestCount: 1\n\t  };\n\t\n\t  if (visits.length === 0) {\n\t    visits.push(requestRecord);\n\t  } else {\n\t    for (var i = visits.length - 1; i >= 0; i--) {\n\t      /* Check for existing request record, compare time interval between requests */\n\t      if (visits[i].requestBy === requestRecord.requestBy) {\n\t        requestRecordFound = true;\n\t        /* Increment visit count for this visitor */\n\t        visits[i].requestCount += 1;\n\t        /* Compare time frame between visits */\n\t        var lastRequestAt = visits[i].lastRequestAt;\n\t        var newRequestAt = requestRecord.newRequestAt;\n\t        var requestInterval = newRequestAt - lastRequestAt;\n\t        /* Compare time frame between visits */\n\t        if (requestInterval <= 1000) {\n\t          /* This visitor is exceeding the maximum visits per second, increase delay between requests */\n\t          if (visits[i].requestCount >= maxPerSecond) {\n\t            visits[i].delayMultiplier += 1;\n\t            requestRecord.delayMultiplier = visits[i].delayMultiplier;\n\t          }\n\t        } else {\n\t          /* This visitor is not exceeding the maximum visits per second, reset delays and request count */\n\t          visits[i].delayMultiplier = 1;\n\t          visits[i].requestCount = 1;\n\t        }\n\t        /* Set lastRequest to this request */\n\t        visits[i].lastRequest = requestRecord.newRequestAt;\n\t      } else {\n\t        /* Check for and remove request records if interval is greater than removeRecodAfter */\n\t        var timeSinceLastVisit = requestRecord.newRequestAt - visits[i].lastRequestAt;\n\t        if (timeSinceLastVisit >= removeRecordAfter) {\n\t          visits.splice(i, 1);\n\t        }\n\t        /* There isn't an existing requestRecord for this visitor, add it to visits array */\n\t        if (i === 1 && !requestRecordFound) {\n\t          visits.push(requestRecord);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  //Delay processing request\n\t  setTimeout(function () {\n\t    next();\n\t  }, delayInMS * requestRecord.delayMultiplier);\n\t};\n\t\n\tif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\t  module.exports = rationjs;\n\t}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// ration.web.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap eb67d7b9f95502eceac8","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Ration.js                                                                 *\n* Description: 100% Vanilla Javascript Rate Limiting / DDOS Protection Library     *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2021 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n\nlet visits = [];\nlet maxPerSecond = 20;\nlet delayInMS = (1000 / maxPerSecond);\nlet removeRecordAfter = (1000 * 60 * 5); //If no visits after 5 minutes, remove the record\n\nconst rationjs = (req, res, next) => {\n\t'use strict';\n\n\n\tlet requestRecordFound = false;\n \tlet requestRecord = {\n \t\trequestBy: (req.header('x-forwarded-for') || req.connection.remoteAddress),\n \t\tnewRequestAt: Date.now(),\n \t\tlastRequestAt: Date.now(),\n \t\tdelayMultiplier: 1,\n \t\trequestCount: 1\n \t};\n\n \tif(visits.length === 0) {\n \t\tvisits.push(requestRecord);\n \t} else {\n \t\tfor (var i = visits.length - 1; i >= 0; i--) {\n\t \t\t/* Check for existing request record, compare time interval between requests */\n\t \t\tif(visits[i].requestBy === requestRecord.requestBy) {\n\t \t\t\trequestRecordFound = true;\n\t \t\t\t/* Increment visit count for this visitor */\n \t\t\t\tvisits[i].requestCount += 1;\n \t\t\t\t/* Compare time frame between visits */\n\t \t\t\tlet lastRequestAt = visits[i].lastRequestAt;\n\t \t\t\tlet newRequestAt = requestRecord.newRequestAt;\n\t \t\t\tlet requestInterval = (newRequestAt - lastRequestAt);\n\t \t\t\t/* Compare time frame between visits */\n\t \t\t\tif(requestInterval <= 1000) {\n\t \t\t\t\t/* This visitor is exceeding the maximum visits per second, increase delay between requests */\n\t \t\t\t\tif(visits[i].requestCount >= maxPerSecond) {\n\t \t\t\t\t\tvisits[i].delayMultiplier += 1;\n\t \t\t\t\t\trequestRecord.delayMultiplier = visits[i].delayMultiplier;\n\t \t\t\t\t}\n\t \t\t\t} else {\n\t \t\t\t\t/* This visitor is not exceeding the maximum visits per second, reset delays and request count */\n\t \t\t\t\tvisits[i].delayMultiplier = 1;\n\t \t\t\t\tvisits[i].requestCount = 1;\n\t \t\t\t}\n\t \t\t\t/* Set lastRequest to this request */\n\t \t\t\tvisits[i].lastRequest = requestRecord.newRequestAt;\n\t \t\t} else {\n \t\t\t\t/* Check for and remove request records if interval is greater than removeRecodAfter */\n \t\t\t\tlet timeSinceLastVisit = (requestRecord.newRequestAt - visits[i].lastRequestAt);\n \t\t\t\tif(timeSinceLastVisit >= removeRecordAfter) {\n \t\t\t\t\tvisits.splice(i, 1);\n \t\t\t\t}\n \t\t\t\t/* There isn't an existing requestRecord for this visitor, add it to visits array */\n \t\t\t\tif(i === 1 && !requestRecordFound) {\n\t\t \t\t\tvisits.push(requestRecord);\n\t \t\t\t}\n \t\t\t}\n\t \t}\n \t}\n \t//Delay processing request\n \tsetTimeout(() => {\n \t\tnext();\n \t}, (delayInMS * requestRecord.delayMultiplier));\n};\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = rationjs;\n}\n\n\n// WEBPACK FOOTER //\n// ./ration.js"],"sourceRoot":""}